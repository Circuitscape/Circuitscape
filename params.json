{"name":"Circuitscape","tagline":"Circuitscape uses electronic circuit theory to solve problems in landscape ecology.","body":"#CIRCUITSCAPE User Guide \r\n\r\n**Brad McRae, Viral Shah, and Tanmay Mohapatra**\r\n\r\n**Version 4.0 Beta - Updated January 6, 2014**\r\n\r\n***How to cite this document:***\r\n<br/>McRae, B.H., V.B. Shah, and T.K. Mohapatra. 2013\\.  Circuitscape 4 User \r\nGuide. The Nature Conservancy. http://www.circuitscape.org.\r\n\r\n**First-time users:** Please see the section on memory management before \r\nrunning large grids (> 1 million cells).\r\n\r\n\r\n\r\n#1. Introduction\r\n\r\n\r\nCircuitscape is an open-source program that uses circuit theory to model \r\nconnectivity in heterogeneous landscapes. Its most common applications include \r\nmodeling movement and gene flow of plants and animals, as well as identifying \r\nareas important for connectivity conservation. Circuit theory complements \r\ncommonly-used connectivity models because of its connections to random walk \r\ntheory and its ability to simultaneously evaluate contributions of multiple \r\ndispersal pathways. Landscapes are represented as conductive surfaces, with \r\nlow resistances assigned to landscape features types that are most permeable \r\nto movement or best promote gene flow, and high resistances assigned to \r\nmovement barriers. Effective resistances, current flow, and voltages \r\ncalculated across the landscapes can then be related to ecological processes, \r\nsuch as individual movement and gene flow. More detail about the underlying \r\nmodel, its parameterization, and potential applications in ecology, evolution, \r\nand conservation planning can be found in McRae (2006) and McRae et al. \r\n(2008). \r\n\r\nCircuitscape was originally designed to analyze connectivity across raster \r\ngrids. With version 4.0, it can now analyze arbitrary networks \r\n(graphs) with any set of connections between nodes the user specifies. \r\nCircuitscape can be run from a stand-alone interface or from an ArcGIS \r\ntoolbox: \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/image16.png\" alt=\"GUI\" width=\"500px;\"/> \r\n</p> \r\n\r\n**Fig. 1.** Stand-alone interface (supports raster and network analyses). \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/ArcGISInterface.png\" alt=\"ArcGIS Toolbox\" \r\nwidth=\" 300px;\"/> \r\n</p> \r\n\r\n**Fig. 2.** ArcGIS Toolbox (for raster-based analyses only). The toolbox also \r\nincludes utilities to put raster and feature class inputs into a common \r\ncoordinate system. More utilities for creating core habitat areas and \r\nresistance layers are in development. \r\n\r\n###Before You Start \r\n\r\nWhatever software you use, connectivity modeling involves a great deal of \r\nresearch, data compilation, GIS analyses, and careful interpretation of \r\nresults. Defining areas to connect, parameterizing resistance models, and \r\nother modeling decisions you will need to make are not trivial. Before diving \r\nin, we strongly recommend that users first acquaint themselves with the \r\nprocess and challenges of connectivity modeling by consulting published \r\nresources. Good places to start include overviews on the [Corridor \r\nDesign](http://www.corridordesign.org/) and [Connecting \r\nLandscapes](http://connectinglandscapes.org/) websites. Spear et al. (2010), \r\nBeier et al. (2011) and Zeller et al. (2012) offer helpful advice on \r\nresistance mapping and connectivity analysis in general. Before using this \r\nsoftware, users should acquaint themselves with the use of circuit theory for \r\nmodeling connectivity (summarized in McRae et al. 2008). \r\n\r\nLastly, users interested in mapping important connectivity areas may wish to \r\nconsider [Linkage Mapper](https://code.google.com/p/linkage-mapper/), which \r\nmaps least-cost corridors. Linkage Mapper now also hybridizes least-cost \r\ncorridor modeling with Circuitscape (see the Pinchpoint Mapper tool within the \r\nLinkage Mapper toolkit). Links to other connectivity tools can be found on the \r\n[Corridor Design](http://www.corridordesign.org/) and [Connecting \r\nLandscapes](http://connectinglandscapes.org/) websites. \r\n\r\n#2. How Circuitscape Works \r\n\r\nCircuitscape may be called through its own graphical user interface, from the \r\nCircuitscape for ArcGIS Toolbox, or from the command line. Users supply \r\nCircuitscape with resistance data and the program calculates effective \r\nresistances and/or creates maps of current flow and voltages across landscapes \r\nand networks. \r\n\r\n### Two data types: network and raster \r\n\r\nCircuitscape reads either a network of nodes connected by links or a raster \r\ngrid of resistances (Fig. 3). Links and raster cells are attributed with \r\nresistance values that reflect the degree to which the landscape facilitates \r\nor impedes movement. Networks and raster maps can be coded in resistances \r\n(with higher values denoting greater resistance to movement) or conductances \r\n(the reciprocal of resistance; higher values indicate greater ease of \r\nmovement). \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/SimpleNetworkAndRaster.png\" \r\nwidth=\"500px;\"/> \r\n</p> \r\n\r\n**Fig. 3.** Simple illustrations of network and raster data types used by \r\nCircuitscape. The program can operate on networks of nodes (left panel) or \r\nraster grids (right panel). Raster grid cells can have any resistance value. \r\nHere, cells with zero resistance (\"short-circuit regions,\" which can be used \r\nto represent contiguous habitat patches) are shown in white, cells with a \r\nresistance of 1 are shown in gray, and a cell with infinite resistance (coded \r\nas NODATA) is shown in black. \r\n\r\nFor rasters, every grid cell with finite resistance is represented as a node \r\nin a graph, connected to either its four first-order or eight first- and \r\nsecond-order neighboring cells. Cells with infinite resistance (zero \r\nconductance) are dropped. Habitat patches, or collections of cells, can be \r\nassigned zero resistance (infinite conductance) using a separate \r\n\"short-circuit region\" file. These collections of cells are collapsed into a \r\nsingle node. \r\n\r\n<p align=\"center\"> <img src =\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/RasterWithResistors.png\" width=\"400px;\"/> \r\n</p> \r\n\r\n**Fig. 4.** Raster grids are converted to electrical networks. Each cell \r\nbecomes a node (represented by a dot), and adjacent cells are connected to \r\ntheir four or eight neighbors by resistors. Here, the two short-circuit \r\nregions have each been collapsed into a single node. The infinite resistance \r\ncell is dropped entirely from the network. \r\n\r\n<div style=\"page-break-after: always;\"></div>\r\n### Calculation modes \r\n\r\nCircuitscape operates in one of four modes: **pairwise**, **advanced**, \r\n**one-to-all**, and **all-to-one**. Pairwise and advanced modes are available \r\nfor both raster and network data types. The one-to-all and all-to-one modes \r\nare available for raster data only. \r\n\r\nIn the **pairwise** mode, connectivity is calculated between all pairs of \r\nfocal nodes (points or regions between which connectivity is to be modeled) \r\nsupplied to the program in a single input file. For each pair of focal nodes, \r\none node will arbitrarily be connected to a 1-amp current source, while the \r\nother will be connected to ground. Effective resistances will be calculated \r\niteratively between all pairs of focal nodes, and, if selected, maps of \r\ncurrent and voltage will be produced. If there are *n* focal nodes, there will \r\nbe *n*(*n* \\- 1)/2 calculations **unless** you're using focal points (only one \r\ncell per focal node) and not mapping currents or voltages. In the latter case, \r\nwe can do it in *n* calculations **(much faster)**. \r\n\r\nThe **advanced** mode offers much greater flexibility in defining sources and \r\ntargets for current flow. The user defines any number of current sources and \r\nany number of grounds in a network or raster landscape, and these are all \r\nactivated simultaneously. Sources represent points or areas from which current \r\nflows, whereas grounds represent nodes where current exits the system. \r\n\r\nSource nodes can have different strengths (i.e. inject more or less current \r\ninto the network or grid), and ground nodes can be tied to ground with any \r\nresistance. Current sources and grounds are supplied in separate input files. \r\n\r\nTwo other modes are available for raster data types only. The **one-to-all \r\n**mode is similar to the pairwise mode, and takes the same input files. \r\nHowever, instead of iterating across all focal node *pairs*, this mode \r\niterates across all focal nodes. In each iteration, one focal node is \r\nconnected to a 1-amp current source, while all remaining focal nodes are \r\nconnected to ground. If there are *n* focal nodes, there will be *n* \r\ncalculations. \r\n\r\nThe **all-to-one **mode is similar to the one-to-all mode, and takes the same \r\ninput files. However, in this mode Circuitscape connects one focal node to \r\nground and all remaining focal nodes to 1-amp current sources. It then repeats \r\nthe process for each focal node; if there are *n* focal nodes, there will be \r\n*n* calculations. \r\n\r\nCircuitscape can generate maps showing the current density and voltage at each \r\nnode or cell under each configuration (and current flow for each link/resistor \r\nin networks). Additionally, Circuitscape writes a file reporting effective \r\nresistances between all pairs of focal nodes in the pairwise mode, and between \r\neach node and ground in the one-to-all mode. Resistances in the all-to-one \r\nmode are undefined, so a file is written with zeros indicating successful \r\nsolves. \r\n\r\n### Illustrations of analyses with network data \r\n\r\nFor network data types, any node can be connected to any other node by a \r\nresistor: \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/SimpleNetworkWithNumbers2.png\" width=\" \r\n400px;\"/> \r\n</p> \r\n\r\n**Fig. 5.** Example network. This network would be input as a **text list** \r\nspecifying resistances between each pair of connected nodes (0-1, 1-2, 1-3, \r\n2-3, and 2-4; see the \"Input file formats\" section below). \r\n\r\nFor **pairwise analysis** we would also supply a list of focal nodes \r\n(containing at least two node numbers, but as many as five, the number of \r\nnodes in the circuit) between which we want to perform calculations. \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/SimpleNetworkCurrentFlow.png\" width=\" \r\n400px;\"/> \r\n</p> \r\n\r\n**Fig 6.** In pairwise mode, Circuitscape will iterate across pairs of nodes \r\nin a focal node list. If node 0 and node 4 are in the focal node list, then \r\none of the iterations will look like the above, with a 1 amp current source \r\nconnected to one node and the other grounded. Current will flow across the \r\nnetwork from the source to the ground. Branch currents, node currents, node \r\nvoltages, and effective resistances between node pairs can be written for each \r\niteration. \r\n\r\nMore complexity can be added by running in **advanced mode**, which allows any \r\nnumber of sources and grounds to be activated simultaneously. For example, we \r\ncould modify the circuit above by adding a single, fixed source at node zero \r\nand adding multiple grounds with different resistances. Current sources and \r\ngrounds are entered in separate files. \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/AdvancedNetwork.png\" width=\" 430px;\"/> \r\n</p> \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/AdvancedNetworkFlows.png\" width=\" \r\n400px;\"/> \r\n</p> \r\n\r\n**Fig. 7.** In advanced mode, any node can be tied to a current source or to \r\nground, either directly or via resistors with any value (top panel). Currents \r\npassing through all nodes and links can then be calculated (bottom panel), and \r\nvoltages can be calculated at each node. Circuit above is from McRae et al. \r\n(2008). \r\n\r\n### Illustrations of analyses with raster data \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/Fig1_RasterInputs.png\" width=\" 600px;\"/> \r\n</p> \r\n\r\n**Fig. 8.** Example raster input files for **pairwise, one-to-all, and all-to-one modes**. \r\nInput files in this example include a **resistance map** specifying per-cell \r\nresistances or conductances, a **focal node location file** (with two focal \r\nregions and one focal point in this case), and an optional **short-circuit \r\nregion map**. Focal regions and short-circuit regions represent areas with \r\nzero resistance. Cells with the same region ID are considered perfectly \r\nconnected and are collapsed into a single node, even if they are not \r\ncontiguous. \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/Fig2_RasterPairwise.png\" width=\" 600px;\"/> \r\n</p> \r\n\r\n**Fig. 9.** Schematic describing **pairwise** mode analyses that would result \r\nfrom the input files shown in Fig. 8. Three sets of pairwise calculations-- \r\ninvolving focal nodes 1 and 2, nodes 1 and 3, and nodes 2 and 3--would be \r\nconducted. For each pair, one node would be connected to a 1-amp current \r\nsource, and the other to ground. Note that focal region nodes become \r\nshort-circuit regions when they are activated (e.g., node 1 in scenario 1), \r\nbut these regions are not present when the nodes are not activated (e.g., node \r\n1 in scenario 3). \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/Fig3_RasterOneToAll.png\" width=\" 600px;\"/> \r\n</p> \r\n\r\n**Fig. 10.** Schematic describing **one-to-all mode** analyses that would \r\nresult from the input files shown in Fig. 8. Three sets of calculations-- \r\ninvolving focal nodes 1, 2, and 3--would be conducted. For each, one node \r\nwould be connected to a 1-amp current source, and the other two would be \r\nconnected to ground. The all-to-one mode is similar, with arrow directions \r\nreversed; that is, one node is connected to ground while the remaining nodes \r\nare connected to 1-amp current sources. \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/Fig4_RasterAdvancedInputs.png\" width=\" \r\n600px;\"/> \r\n</p> \r\n\r\n**Fig. 11.** Example raster input files for **advanced mode**, which requires \r\nindependent **current source and ground files**. Note that current sources in \r\nthis example have different \"strengths,\" and ground nodes are connected to \r\nground with differing levels of resistance. This example also includes an \r\noptional grid with five short-circuit regions. \r\n\r\n<p align=\"center\"> <img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/Fig5_RasterEffectiveConfiguration.png\" \r\nwidth=\" 600px;\"/> \r\n</p> \r\n\r\n**Fig. 12.** The first two panels show the \"effective\" configuration resulting \r\nfrom the input files in Fig. 11. Because current source C and grounds D and E \r\noverlap with short-circuit regions, these short-circuit regions effectively \r\nbecome sources or grounds themselves. The rightmost panel shows a schematic of \r\nthe resulting analysis, with all sources (white points and polygons) and \r\ngrounds (black points and polygons) activated simultaneously. Note that \r\nsources may be negative (drawing current out of the system), and ground nodes \r\ncan actually contribute current to the system when negative sources are \r\npresent. \r\n\r\n#3. Installing Circuitscape \r\n\r\n## Windows and Mac OS X executables (most users) \r\n\r\nDownload and run the appropriate setup package (either 32- or 64-bit, \r\ndepending on your operating system). This will install Circuitscape and create \r\nan \"examples\" directory in the installation directory with example input files \r\non Windows. Mac users should download this directory separately. \r\n\r\n## ArcGIS Toolbox (Windows only) \r\n\r\nIf you have ArcGIS 10.0 or later, you can download and install the \r\nCircuitscape for ArcGIS Toolbox from the Circuitscape website. Follow the \r\ninstallation instructions included in the zip package. You will also need to \r\ninstall the Circuitscape executable package (described above) for the toolbox \r\nto work. \r\n\r\n## Installing Circuitscape as a Python Package \r\n\r\nFor Python users, Circuitscape is available as a regular Python package from \r\nthe Python packages repository. You will also need to install several packages \r\nupon which Circuitscape depends. \r\n\r\nPython can be installed from http://www.python.org/ and the `pip` installer \r\ncan be installed from http://www.pip-installer.org/. \r\n\r\nBefore running Circuitscape, you will also need to install the Numpy, Scipy, \r\nPyAMG, wxPython and PythonCard Python packages. \r\n\r\nOnce these are installed, run the following command to get Circuitscape: \r\n\r\n```` sudo pip install -U circuitscape ```` \r\n\r\nWhen you are done, the following commands will be available for using \r\nCircuitscape: \r\n\r\n- `python csgui.py` : to use the graphical user interface \r\n- `python csrun.py <path to .ini configuration file>` : to use Circuitscape from the console \r\n- `python csverify.py` : to verify the installation. \r\n\r\n\r\n## Linux \r\n\r\nCircuitscape can be installed as a Python package on Linux, following the instructions above.\r\n\r\nOptionally, you may download the following two files from the Circuitscape source repository:\r\n\r\n- `setup-unix.sh`\r\n- `pip_requirements.txt`\r\n\r\nAnd run the command `sh setup-unix.sh` to guide you through the installation process.\r\n\r\n\r\n\r\n#4. Using Circuitscape with the graphical user interface \r\n\r\nTo start the user interface using Windows, run Circuitscape as you would any \r\nother installed program. In Mac OS X, double-click on Circuitscape.app. The \r\nuser interface shown in the Introduction section above will appear. You can \r\nalso call Circuitscape from the Circuitscape for ArcGIS Toolbox, available from\r\nthe Circuitscape website, or from the command line. \r\n\r\n##Step 1: Choose your input data type \r\n\r\nThe first step is to choose whether you will be analyzing network or raster \r\ndata. \r\n\r\n##Step 2: Choose a modeling mode \r\n\r\nAs described above, Circuitscape is run in one of four modes. Pairwise and \r\nadvanced modes are available for both raster and network data types. The \r\none-to-all and all-to-one modes are available for raster data only. \r\n\r\n\r\n##Raster resistance map or network/graph \r\n\r\nThe resistance file specifies the ability of each cell in a landscape or link \r\nin a network to carry current (See Figs. 5 and 8). File formats are described \r\nin the *Input file formats* section below. \r\n\r\n\r\n###Data represent conductances instead of resistances \r\n\r\nMost users code their network or raster data in terms of resistances (with \r\nhigher values denoting greater resistance to movement), which is common in \r\nconnectivity modeling. Check this box if you want to specify \r\nconductances instead (conductance is the reciprocal of resistance; higher \r\nvalues indicate greater ease of movement). \r\n\r\nNote that zero and infinite values for conductances and resistances represent \r\nspecial cases. Infinite resistances are coded as NODATA values (see file \r\nformat description in the *Input file formats* section below) in input \r\nresistance grids, or as zero or NODATA in input conductance grids; these are \r\ntreated as complete barriers, and are disconnected from all other cells. For \r\nraster analyses, cells with zero resistance (infinite conductance) can be \r\nspecified using a separate short-circuit region file as described below. \r\n\r\n<div style=\"page-break-after: always;\"></div>\r\n## Pairwise, one-to-all, and all-to-one mode options \r\n\r\n###Focal node location and data type \r\n\r\nThis file specifies locations of nodes between which effective resistance and \r\ncurrent flow are to be calculated (See Figs. 6 and 9). **Each focal node \r\nshould have a unique positive integer ID.** Files may be text lists specifying \r\ncoordinates or appropriate raster grid formats. When a grid is used, it must \r\nhave the same cell size and extent as the resistance grid. The value stored in \r\neach grid cell location refers to the focal node ID. Cells that do not contain \r\nfocal nodes should be coded with NODATA values. When a text list is used, the \r\nvalue field references the focal node ID. Examples are in the examples \r\ndirectory (located where Circuitscape is installed) and can also be found on \r\nthe Circuitscape downloads page. \r\n\r\nFor raster analyses, focal nodes may occur at points (single cells on the \r\nresistance grid) or across regions (Fig. 8). For the latter, a single ID would \r\noccupymore than one cell in a grid or more than one pair of coordinates in a \r\ntext list (and falling within more than one cell in the underlying resistance \r\ngrid). Cells within a single region would then be collapsed into a single \r\nnode, as they are when short-circuit region files are used (see below). The \r\ndifference is that a focal region will be \"burned in\" to the resistance grid \r\nonly for pairwise calculations that include that focal node. As with \r\nshort-circuit regions, focal regions need not be made up of contiguous cells. \r\nFor large grids or large numbers of focal nodes, focal regions may require \r\nmore computation time. When calculating resistances on large raster grids and \r\nnot creating voltage or current maps, focal points will run much more quickly. \r\n\r\n\r\n\r\n###Number of parallel processors to use \r\n\r\nOn Mac OS X and Linux systems, Circuitscape can run iterations in parallel for\r\npairwise mode when focal points, not focal regions, are used. Choose how many \r\nprocessors you would like to devote to Circuitscape runs. \r\n\r\n## Advanced mode options \r\n\r\n###Current source file \r\n\r\nThis file specifies locations and strengths, in amps, of current sources \r\n(Figs. 7 and 11). Either a raster or a text list may be used. Rasters must \r\nhave the same cell size, projection, and extent as the resistance grid, and \r\ncells that do not contain current sources should be coded with NODATA values. \r\nNote: current sources may be positive or negative (i.e., they may inject \r\ncurrent into the grid or pull current out. Similarly, grounds may either serve \r\nas a sink for current or may contribute current if there are negative current \r\nsources in the grid). Examples are in the examples directory. \r\n\r\n###Ground point file \r\n\r\nThis file specifies locations of ground nodes and resistances or conductances \r\nof resistors tying them to ground (Figs. 7 and 11). Either a raster or a text \r\nlist may be used. Rasters must have the same cell size, projection, and extent \r\nas the resistance grid, and cells that do not contain grounds should be coded \r\nwith NODATA values. Note that if a direct (R = 0) ground connection conflicts \r\nwith a current source, the ground will be removed unless the 'remove source' \r\noption in the Options Window is chosen. Example ground input files are in the \r\nexamples directory. \r\n\r\n###Data represent conductances instead of resistances to ground \r\n\r\nThe default (unchecked) setting is to specify resistances to ground. Checking \r\nthis box means that your ground point file specifies connections to ground in \r\nterms of conductance instead. To tie cells directly to ground, use resistances \r\nas the data type and set values in the corresponding ground point file to \r\nzero. \r\n\r\n## Output options \r\n\r\n###Base output filename \r\n\r\nChoose a directory path and base file name for output files. Resistances, \r\ncurrent maps, voltage maps, and configuration files (which save user interface \r\nsettings and have a .ini extension) will all use this base name, along with \r\nappropriate suffixes and extensions. \r\n\r\n###Create current maps \r\n\r\nWhen checked, current maps will be generated for every pair of focal nodes in \r\nthe pairwise mode, or for the current source and ground configuration \r\nspecified in the advanced mode. Current maps have the same dimension as the \r\noriginal input files, with values at each node (cell) representing the amount \r\nof current flowing through the node. In the pairwise mode, a current map file \r\nwill be created for each focal node pair, and a cumulative (additive) file \r\nwill be also written. (Note that for a given pair of focal nodes, current maps \r\nare identical regardless of which node is the source and which is the ground \r\ndue to symmetry). For the advanced modeling mode, a single map will be written \r\nshowing current densities at each cell resulting from the current source and \r\nground configurations in the input files. These files can be displayed in a \r\nGIS as in Fig. 13. Such maps can be used to identify areas which contribute \r\nmost to connectivity between focal points (McRae et al. 2008). \r\n\r\n![](https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/image24.png) \r\n\r\n**Fig. 13.** Current map used to predict important connectivity areas between \r\ncore habitat patches (green polygons, entered as focal regions) for mountain \r\nlions. Warmer colors indicate areas with higher current density. \"Pinch \r\npoints,\" or areas where connectivity is most tenuous, are shown in yellow. \r\nQuantile classification schemes or \"histogram equalize\" stretches tend to work \r\nwell for current maps when using ArcGIS. Research Collaborators: Brett Dickson \r\nand Rick Hopkins, Live Oak Associates. \r\n\r\n###Create voltage maps \r\n\r\nFor the pairwise modeling mode, voltage maps give node voltages that would \r\nbe observed for each focal node pair if one node were connected to a 1 amp \r\ncurrent source and the other to ground. For the advanced modeling mode, \r\nvoltage maps show voltages at each cell resulting from the current source \r\nand ground configurations in the input files. \r\n\r\n\r\n##The File menu \r\n\r\n####File >> Load settings from last run \r\n\r\nLoads settings automatically saved the last time the \"Run\" button was clicked. \r\n\r\n####File >> Load settings from file \r\n\r\nAllows user to browse for a configuration file (.ini extension) with \r\npreviously saved settings. These can include settings automatically saved in \r\nthe user-specified output directory upon clicking the \"Run\" button, or those \r\nsaved manually using the \"Save settings\" function. \r\n\r\n####File >> Save settings \r\n\r\nAllows the user to save settings they have entered in the user interface for \r\nfuture retrieval as a configuration file (.ini extension). This option is \r\nuseful for creating run configurations for use in batch mode. \r\n\r\n####File >> Verify code \r\n\r\nAllows the user to verify that their installation is working properly. \r\nDatasets in the \"verify\" directory will be used, and effective resistances and \r\ncurrent maps will be checked against known correct values. If verification \r\nfails, see the log Window for details. \r\n\r\n####File >> Run in batch mode \r\n\r\nUsing the batch mode, you can specify any number of configurations to run by \r\nloading configuration (.ini) files saved in a single directory. This can be \r\nuseful for running large numbers of analyses. The configuration files can be \r\ncreated in the user interface and saved under \"Save settings\" as described \r\nabove, and can be modified using standard text editors. \r\n\r\n<div style=\"page-break-after: always;\"></div>\r\n##The Options window \r\n\r\n<img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/OptionsWindow.png\" alt=\"ArcGIS Toolbox\" width=\" 300px;\"/> \r\n\r\n**Fig. 14.** The options window gives access to less-frequently-used options. \r\nTo access this window via the menu bar, click on Options>> More settings & \r\ninputs. \r\n\r\n###Calculation Options \r\n\r\n####Connect raster cells to FOUR neighbors instead of EIGHT \r\n\r\nFor raster operations, Circuitscape creates a graph (network) by connecting \r\ncells to their four (Fig. 4) or eight immediate neighbors. The default is \r\neight (four cardinal and four diagonal neighbors), but check this box if you \r\nwant to connect cells to their four cardinal neighbors only. \r\n\r\n####Use average conductance instead of resistance for connections between cells \r\n\r\nFor raster operations, this choice determines whether cells are connected by \r\ntheir average resistance or by their average conductance. Most users will want \r\nthe default (unchecked). \r\n\r\nThe distinction is particularly important when connecting cells with zero or \r\ninfinite values. When average resistances are used, first-order neighbors \r\nconnected by resistors with resistance given by: _Rab_ = (_Ra_ \\+ _Rb_) / 2, \r\nand second-order (diagonal) neighbors are connected by resistors with \r\nresistance given by: _Rab_ = &radic;2 \\* (_Ra_ \\+ _Rb_) / 2, where _Ra_ and _Rb_ are \r\nthe resistances of the neighboring cells. When average conductances are used, \r\nfirst-order neighbors connected by resistors with conductance (the reciprocal \r\nof resistance) given by: _Gab_ = (_Ga_ \\+ _Gb_) / 2, and second-order \r\n(diagonal) neighbors are connected by resistors with resistance given by: \r\n_Gab_ = (_Ga_ \\+ _Gb_) / (2\\*&radic;2), where _Ga_ and _Gb_ are the conductances of \r\nthe neighboring cells. (As noted above, resistance and conductance are \r\nreciprocals of each other, i.e., _Gab_ = 1 / _Rab_.) \r\n\r\n####Preemptively release memory when possible\r\n\r\nIf you are getting memory errors this option may help to free some memory. It \r\nwill likely result in slower execution times.\r\n\r\n####Pairwise mode: Run in low memory mode \r\n\r\nFor raster operations, this option will use less memory in the pairwise mode \r\nwhen focal points (not regions) are used, but will also run somewhat slower. \r\n\r\n####Advanced mode: use unit currents (i=1) for all current sources \r\n\r\nAll current sources will be set to 1 Amp, regardless of the value specified in \r\nthe current source input file. \r\n\r\n####Advanced mode: use direct connections to ground (R=0) for all ground points \r\n\r\nAll ground cells will be tied directly to ground, regardless of the value \r\nspecified in the input ground file. \r\n\r\n####Advanced mode: when a source and ground are at the same node: \r\n\r\nWhenever a cell is connected both to a current source and to ground, this \r\nchoice will determine whether the source is removed, the ground is removed, \r\nboth are removed, or both are retained. For the latter, if a source is tied \r\ndirectly to ground (i.e., with zero resistance), the ground connection will be \r\nremoved. \r\n\r\n###Mapping Options\r\n\r\n####Write maximum of current maps\r\n\r\nIn pairwise, one-to-all, and all-to-one modes, current maps are created for \r\nevery iteration. By default, Circuitscape will also write a cumulative map \r\nshowing the sum of values at each node or grid cell across all iterations. If \r\nthis option is checked, an an extra map that shows the maximum current value at \r\neach node or cell across iterations.  \r\n\r\n####Write cumulative & max current maps only \r\n\r\nMaps of current flow between each pair of focal nodes (or for each focal node \r\nin one-to-all and all-to-one modes) will be calculated, but only one summed \r\nmap of current from all calculations (and a map of maximum values if that \r\noption is checked) will be written to disk. \r\n\r\n####Compress output grids \r\n\r\nOutput ASCII grids are automatically compressed using the gzip file format. \r\nThis can be useful when many large maps will be written.\r\n\r\n####Log-transform current maps \r\n\r\nValues in output current maps will reflect a log10 transform of current \r\ndensities, which can be useful for visualizing them in some GIS packages (e.g.,\r\nArcView 3.X). Cells with zero current will be re-coded with NODATA values. \r\n\r\n####Set focal node currents to zero \r\n\r\nWhen running raster data in pairwise, all-to-one, and one-to all modes, focal\r\nnodes will have zero current in output maps when they are activated. For \r\npairwise mode, cumulative maps will still show currents flowing through focal \r\nregions that results from other pairs being activated. This helps to show \r\ncurrent flowing through a focal region as it moves between other focal regions \r\nin cumulative current maps. This current passing through a focal region can \r\ngive an idea of the importance of the focal region for connecting other focal \r\nregion pairs (for an example, see Fig. 5 in Dickson et al. 2013).\r\n\r\n###Optional Input Files\r\n\r\n####Read raster mask file \r\n\r\nWhen checked, a dialog will open to select a raster mask file. Cells with \r\nnegative, zero, or NODATA values in the mask will be dropped from the \r\ncorresponding resistance map (i.e., treated as complete barriers). Positive \r\ninteger cells will be retained. File should only contain integers and be in \r\nraster format. See example file \"mask.asc\" in the examples directory. \r\n\r\n####Load a raster short-circuit region map \r\n\r\nShort-circuit regions act as areas of \r\nzero resistance, essentially providing patches through which current is given a \r\n\"free ride\" as it flows across the landscape. Each short-circuit region should \r\nhave a unique positive integer identifier; cells within each region are merged \r\ninto a single node with all other cells in the region, including non-adjacent \r\ncells (i.e., regions need not be contiguous). Non-short-circuit-region areas \r\nshould be stored as NODATA values. The file must have the same cell size and \r\nextent as the resistance grid. \r\n\r\n####One-to-all and All-to-One modes: Read source strength file \r\n\r\nWhen checked, a dialog will open to select a text list of focal node IDs and \r\ncorresponding source strengths. For any focal node in this list, the amount of \r\ncurrent injected into that node when it is a source node will be set to the \r\nstrength specified in the list. All nodes not in the list will default to 1 \r\nAmp. This should be in the same file format as the Text List File Format given \r\nbelow, but with two columns (ID followed by source strength). File should have \r\na .txt extension. See example file \"source_strength_list.txt\" in the examples \r\ndirectory. \r\n\r\n####Read file with focal node pairs to include/exclude \r\n\r\nThis option allows users to only perform calculations on a subset of focal node\r\npairs. Users can either identify pairs to include in calculations, or pairs to \r\nexclude, as specified in the first line of the file.\r\n\r\nThis affects all modes except the Advanced Mode.  Files should be in \r\ntab-delimited text with a .txt extension. See formatting information in the \r\n*Input file formats* section below.\r\n\r\n\r\n###The Log Window\r\n\r\n####Level\r\n\r\nThe default level (INFO) sends a moderate amount of information on the \r\nprogram's progress to the terminal window. DEBUG gives more, and the other \r\noptions give less. \r\n\r\n####Log completion times \r\n\r\nWrites names of operations and completion times for each to the terminal \r\nwindow. \r\n\r\n####Send to log file \r\n\r\nInformation printed to the screen will also be saved in a log file in the \r\noutput directory. \r\n\r\n#5\\. Using the Circuitscape for ArcGIS Toolbox (Windows only) \r\n\r\nThe ArcGIS toolbox can facilitate raster Circuitscape analyses. It allows you \r\nto run Circuitscape from ArcMap or ArcCatalog, using ESRI grids or raster file \r\ngeodatabases as inputs (no need to export to ASCII). Toolbox options \r\ncorrespond to those in the stand-alone user interface described above. The \r\ntoolbox also has utilities to convert shapefiles and feature classes to raster \r\nfocal node files. You must have the Circuitscape executable installed to use \r\nthe toolbox. \r\n\r\n#6\\. Running Circuitscape from the command line \r\n\r\nOn Linux machines, running Circuitscape from the command line can be useful, \r\nespecially when running over a network. Whether Circuitscape is called from \r\nthe command line or the graphical user interface, settings (such as input file \r\nnames) are passed to the main Circuitscape module using a configuration file. \r\nThe configuration file has a .ini extension, and can be edited and saved from \r\nthe user interface. The file may also be edited directly in a standard text \r\neditor. \r\n\r\nTo call Circuitscape from the command line in Linux, use the command \r\n```\r\npython csrun.py [config file]\r\n```\r\nwhere `[config file]` is the name (and path, if the \r\nfile is in a different directory) of the configuration (.ini) file. \r\n\r\nOn Windows machines, the command-line executable can be called using the \r\ncommand:\r\n```\r\ncs_run.exe [config file] \r\n```\r\nwhere `[config file]` is the name (and path, if the file is in a different \r\ndirectory) of the configuration file. You will need to call Circuitscape from\r\nthe installation directory (e.g., `C:\\Program Files\\Circuitscape\\`), or \r\nprovide the full path to `cs_run.exe`.\r\n\r\n\r\n\r\n#7\\. Calling Circuitscape from other programs \r\n\r\nCircuitscape can be invoked from external programs to do computations on \r\nrasters and networks and return results. It reads user settings from a \r\nconfiguration (.ini) file that can be either created manually or saved from \r\nthe user interface (under File >> Save settings). \r\n\r\nIf the external program can interface with Python packages, then the \r\nCircuitscape methods can be called directly when Circuitscape is installed as \r\na Python package. For example: \r\n\r\n\r\n````\r\nfrom circuitscape import Compute\r\n\r\ncs = Compute('configuration.ini', 'Screen')\r\nresult = cs.compute()\r\n````\r\n\r\nIf such direct interfacing with Python packages is not possible, Circuitscape \r\ncan be invoked as an application with the following command: \r\n\r\n\r\n````\r\npython csrun.py [configuration.ini]\r\n````\r\n\r\nAlternatively, the cs_run.exe executable can be invoked from external programs \r\non Windows. \r\n\r\nIn the cases above, results are written out to files which can be read back\r\nby the external program. \r\n\r\n\r\n\r\n#8\\. Input file formats\r\n\r\nWhen working with networks, text lists are used for all input files. \r\n\r\nFor raster analyses using the ArcGIS toolbox, resistance grids and other \r\ninputs can be in a number of raster formats. For raster analyses using the \r\nstand-alone Circuitscape interface (Fig. 1) or calling Circuitscape from the \r\ncommand line or from other programs, resistance grids should be in ASCII \r\nraster format, and focal node, current source, and ground files can be in \r\neither raster or text list format. \r\n\r\n##ESRI Raster formats (when using the Circuitscape for ArcGIS Toolbox) \r\n\r\nWhen using the Circuitscape for ArcGIS Toolbox, you can use ESRI grids, raster \r\nfile geodatabases, ASCII rasters, and other raster formats supported by \r\nArcGIS. It's a good idea to have your input files in the same projection. The \r\ntoolbox includes a utility to convert vector focal node files to raster, and \r\nto put all input files in one projection with the same raster extent. \r\n\r\n##ASCII raster format (when using standalone user interface or calling directly).\r\n\r\nWhen using the stand-alone Circuitscape interface, raster input maps should be \r\nstored in Arc/Info ASCII grid format, as exported by standard GIS packages \r\n(see examples in examples directory; these may be viewed with standard text \r\neditors). For focal nodes, the value stored in each grid location refers to \r\nthe focal node ID, and a single ID can occupy more than one cell (IDs must be \r\npositive integers). For current sources, the grid value specifies the source \r\nstrength in amps. For grounds, the grid value specifies either the resistance \r\nor conductance of the resistor tying each ground node to ground, as specified \r\nin the Options window. \r\n\r\nThe ASCII raster format is as follows: \r\n\r\n**Header:**\r\n\r\n````\r\nncols        <Number of columns>\r\nnrows        <Number of rows>\r\nxllcorner    <X coordinate of lower left corner>\r\nyllcorner    <Y coordinate of lower left corner>\r\ncellsize     <size of each cell>\r\nNODATA_value <Code for cells with no habitat, focal nodes, sources or grounds>\r\n````\r\n\r\n**Body (grid data):**\r\n\r\nNumeric data only.  Columns are delimited with tabs and rows are delimited\r\nwith new line characters.\r\n\r\n**Examples (these can also be found in the examples directory)**\r\n\r\nBelow is a 10 x10 resistance map.  Cells with infinite\r\nresistance are assigned NODATA values (-9999):\r\n\r\n````\r\nncols         10\r\nnrows         10\r\nxllcorner     1\r\nyllcorner     1\r\ncellsize      1\r\nNODATA_value  -9999\r\n130    168    153    -9999  14     12    13     107    140    171\r\n104    3      2      -9999  13     158   12     14     13     114\r\n124    2      2      12     -9999  -9999 13     161    4      5\r\n184    5      4      14     13     14    -9999  13     4      4\r\n105    143    103    169    -9999  115   10     -9999  166    14\r\n187    1      163    188    121    142   14     175    -9999  10\r\n198    11     110    115    149    2     2      164    3      -9999\r\n100    11     193    14     12     4     2      1      11     13\r\n-9999  11     12     11     10     12    167    157    181    157\r\n-9999  -9999  122    134    12     157   192    184    190    172\r\n````\r\n\r\nBelow is a 10 x 10 focal region map.  Here, groups of cells have been coded as \r\nfocal regions- so these will be treated as \"core area polygons\" to be \r\nconnected in circuit analyses.  All cells within each focal region will be \r\ncollapsed into a single node (even the non-contiguous cell in region #1) when \r\nthat region is activated in pairwise, one-to-all, or all-to-one analyses.  This \r\nformat is identical to the short-circuit region file format.\r\n\r\n````\r\nncols                10\r\nnrows                10\r\nxllcorner            1\r\nyllcorner            1\r\ncellsize             1\r\nNODATA_value -9999\r\n-9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999\r\n-9999  1      1      -9999  -9999  -9999  -9999  -9999  -9999  -9999\r\n-9999  1      1      -9999  -9999  -9999  -9999  -9999  3      3\r\n-9999  1      1      -9999  -9999  -9999  -9999  -9999  3      3\r\n-9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999\r\n-9999  1      -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999\r\n-9999  -9999  -9999  -9999   2      2     -9999  -9999  -9999  -9999\r\n-9999  -9999  -9999  -9999   2      2      2     -9999  -9999  -9999\r\n-9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999\r\n-9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999  -9999   -9999\r\n````\r\n\r\nNote that regions 1 and 2 are well-connected by a low-resistance corridor in\r\nthe resistance map above.  Region 3 is connected to the other two regions only \r\nif cells are connected to their eight neighbors. In the four-neighbor case, \r\nregion 3 would be completely isolated.\r\n\r\n##Text list file format\r\n\r\nFor network/graph operations, resistor networks, focal nodes, current sources, \r\nand grounds should be stored as text lists (saved with a \".txt\" extension). To \r\nspecify a network of resistors, three columns are used. The first and second \r\ncolumns give the node IDs being connected by a resistor, and the third column \r\ngives the resistance value. For example, the simple circuit: \r\n\r\n<p align=\"center\">\r\n<img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/SimpleNetworkWithNumbers2.png\" width=\" 400px;\"/> \r\n</p>  \r\n\r\ncan be defined by the following text list:\r\n\r\n\r\n```\r\n\t0\t1\t1\r\n\t1\t2\t1\r\n\t1\t3\t1\r\n\t2\t4\t1\r\n\t3\t4\t1\r\n```\r\n\r\nThis file can be found in the examples directory (network_graph.txt).\r\n\r\nFor advanced mode, current sources and grounds are also stored as text lists. \r\nThe above circuit can be expanded to include a current source and grounds with \r\ntwo extra input files. For example, we can add a 1 Amp current source at node \r\n0 with a file that looks like this: \r\n\r\n\r\n```\r\n\t0\t1\r\n```\r\n\r\nTo tie node 4 directly to ground (i.e. to connect it to ground with a wire \r\nthat has a resistance of 0 Ohms) and connect the remaining nodes to ground \r\nwith resistors, we can use a file that looks like this: \r\n\r\n\r\n```\r\n\t0\t99\r\n\t1\t33\r\n\t2\t49.5\r\n\t3\t49.5\r\n\t4\t0\r\n```\r\n\r\nThese files are also included in the examples directory. The resulting circuit \r\nwould look like this (from McRae et al. 2008):\r\n\r\n\r\n<p align=\"center\">\r\n<img src=\"https://raw.github.com/Circuitscape/Circuitscape/master/docs/4.0/images/AdvancedNetwork.png\" width=\"500px;\"/> \r\n</p>  \r\n\r\nFor **raster** operations, you can also store focal nodes, current sources, \r\nand grounds as text lists (saved with a \".txt\" extension). For each node \r\nreferenced in a text list, a value and X and Y coordinates are specified as \r\nshown below. \r\n\r\n\r\n````\r\n    Value1 X1 Y1\r\n    Value2 X2 Y2\r\n    …\r\n````   \r\n\r\nNote: X and Y are geographical coordinates, not row and column numbers.\r\n\r\nExample text list (a partial list of the cell locations in the focal region\r\nmap above; coordinates are for cell centroids):\r\n\r\n````\r\n    1    2.5    9.5\r\n    1    3.5    9.5\r\n    1    2.5    8.5\r\n    1    3.5    8.5\r\n    1    2.5    7.5  \r\n    1    3.5    7.5\r\n    1    2.5    5.5\r\n    2    6.5    4.5\r\n    …\r\n````\r\n\r\nFor focal nodes, the value field references the focal node ID; values must be \r\npositive integers, and a single ID can occupy more than one pair of coordinates \r\n(and more than one cell in the underlying resistance grid). For current \r\nsources, the value field references the source strength in amps. For grounds, \r\nthe value field references either the resistance or conductance of the resistor \r\ntying each ground node to ground, as set in the Options window.\r\n\r\n##Include/exclude file format\r\n\r\nThis file will be loaded when the 'Read file with focal node pairs to \r\ninclude/exclude' option is checked, and affects all modes except the advanced \r\nmode. There are two file formats that can be \r\nused. The first is the simplest, and gives a list of pairs to include\r\nin calculations, or pairs to exclude, as specified in the first line of the \r\nfile. For example, if there are  five focal nodes, numbered 1-5, and the \r\nfollowing list is entered, only pairs (1,2), (1,3), and (1,5) will be analyzed:\r\n\r\n```\r\nmode\tinclude\r\n1\t\t2\r\n1\t\t3\r\n1\t\t5\r\n```\r\n\r\nSimilarly, if the first line in the above file read:\r\n\r\n```\r\nmode \texclude\r\n```\r\n\r\nall pairs except (1,2), (1,3), and (1,5) would be analyzed. See example file \r\n\"list_of_pairs_to_include.txt\" in the examples directory.\r\n\r\nThe second method uses a matrix identifying which pairs of focal nodes to \r\nconnect.  The file specifies minimum and maximum values in the matrix to \r\nconsider a pair connected.  This method can be useful when used with a distance \r\nmatrix to only run analyses between points separated by a minimum distance, or \r\nby a distance equal to or less than a maximum distance.  Note: any focal node \r\nnot in the matrix will be dropped from analyses.  Entries on the diagonal are \r\nignored.  For example, in the following matrix, only pairs with entries between \r\n2 and 50 are connected.  Pairs (1,2), (2,4), and (3,4) will not be analyzed.  \r\nFocal node 5 will be dropped entirely: \r\n\r\n```\r\nmin\t2\r\nmax\t50\r\n0     1     2     3     4     5\t\r\n1     0     100   6.67  7     1\t\r\n2     100   0     11    1     60\r\n3     6.67  11    0     -1    100\t\r\n4     7     1     -1    0     0\r\n5     1     60     100  0     0\r\n```\r\nMake sure to include a zero in the upper-left corner of the matrix.\r\n\r\nFiles should be in tab-delimited text with a .txt extension. See example file “matrix_of_pairs_to_include_and_exclude.txt” in the examples directory.\r\n\r\n\r\n#9\\. Output files\r\n\r\n##Current and voltage data\r\n\r\nCurrent and voltage data for networks will be written in text list formats.\r\n\r\nWhen using the ArcGIS toolbox, current and voltage maps will be written in the\r\nraster format chosen by the user. \r\n\r\nWhen not using the ArcGIS toolbox, raster voltage and current maps are written\r\nusing the ASCII raster format described above.\r\n\r\n##Resistance files\r\n\r\nResistance data are written in both matrix and 3-column formats.\r\n\r\nHere are pairwise resistances written to the output directory for the eight\r\nneighbor case (using per-cell resistances and average resistances for cell\r\nconnection calculations; this can be replicated by loading\r\neight_neighbor_example.ini from the examples directory).  The first row and\r\ncolumn contain the focal node IDs:\r\n\r\n````\r\n  0          1            2            3  \r\n  1          0            11.93688471  15.03634473\r\n  2          11.93688471  0            11.57640568\r\n  3          15.03634473  11.57640568  0  \r\n````\r\n\r\nHere are pairwise resistances written to the output directory for the four\r\nneighbor case, in which focal node 3 was completely isolated (-1 indicates\r\ninfinite resistance):\r\n\r\n````\r\n  0          1            2            3  \r\n  1          0            33.55792693  -1\r\n  2          33.55792693  0            -1\r\n  3          -1           -1           0      \r\n````\r\n\r\nFor convenience, resistances are also written to a separate file in a 3-column\r\nformat, e.g.:\r\n\r\n````\r\n  1      2       33.55792693           \r\n  1      3       -1\r\n  2      3       -1\r\n````\r\n     \r\n\r\n#10\\. Computational limitations, speed, and landscape size\r\n\r\nWe have tested this code on landscapes with up to 100 million cells.\r\nIncreasing numbers of connections using diagonal (eight neighbor) connections\r\nwill decrease the size of landscapes that can be analyzed.  Also, increasing\r\nlandscape size or numbers of focal nodes will increase computation time.  We\r\nanticipate future improvements will increase the program's speed.  Note that\r\ndue to the matrix algebra involved with solving many pairs of focal nodes,\r\nCircuitscape will run much faster when focal points (each focal node falls \r\nwithin only one grid cell), rather than focal regions (at least one focal node \r\noccupies multiple grid cells), are used.\r\n\r\n##Important note: memory limitations\r\n\r\nInsufficient RAM is the most common cause of program errors.  32-bit systems\r\nwill be particularly limited because no more than 2GB of memory can be\r\naddressed by any one process, limiting solvable landscapes to approximately\r\n2-6 million cells, depending on the properties of the grid.  Larger grids can\r\nbe solved on 64-bit systems with large amounts of RAM.\r\n\r\nThere are several ways to increase the solvable grid size. These include \r\nclosing all other programs (especially those that require lots of RAM such as \r\nArcGIS), setting impermeable areas of your resistance map to NODATA, using \r\nfocal points instead of regions in pairwise mode, connecting cells to their \r\nfour neighbors only, and not creating current maps. Also, the one-to-all and \r\nall- to-one modes typically use less memory (and run more quickly) than the \r\npairwise mode. In particular, the all-to-one mode can be an alternative to the \r\npairwise mode when the goal is to produce a cumulative map of important \r\nconnectivity areas among multiple source/target patches. Still, coarsening \r\nyour grids (using larger cell sizes) may be necessary; doing so often produces \r\nresults that are qualitatively similar to those obtained with smaller cell \r\nsizes. See McRae et al. 2008 for details of effects of using coarser grids. \r\n\r\n\r\n\r\n\r\n#11\\. Further Reading\r\n\r\nBeier, P., W. Spencer, R. Baldwin, and B.H. McRae. 2011. Best science\r\npractices for developing regional connectivity maps. Conservation Biology\r\n25(5): 879-892\r\n\r\nDickson B.G., G.W. Roemer, B.H. McRae, and J.M. Rundall. 2013. Models of \r\nregional habitat quality and connectivity for pumas (*Puma concolor*) in the \r\nsouthwestern United States. PLoS ONE 8(12): e81898. \r\ndoi:10.1371/journal.pone.0081898\r\n\r\nMcRae, B.H. 2006. Isolation by resistance. Evolution 60:1551-1561.\r\n\r\nMcRae, B.H. and P. Beier. 2007. Circuit theory predicts Gene flow in plant and\r\nanimal populations. Proceedings of the National Academy of Sciences of the USA\r\n104:19885-19890.\r\n\r\nMcRae, B.H., B.G. Dickson, T.H. Keitt, and V.B. Shah. 2008. Using circuit\r\ntheory to model connectivity in ecology and conservation. Ecology 10:\r\n2712-2724.\r\n\r\nShah, V.B. 2007. An Interactive System for Combinatorial Scientific Computing\r\nwith an Emphasis on Programmer Productivity. PhD thesis, University of\r\nCalifornia, Santa Barbara.\r\n\r\nShah,V.B. and B.H. McRae. 2008. Circuitscape: a tool for landscape ecology.\r\nIn: G. Varoquaux, T. Vaught, J. Millman (Eds.). Proceedings of the 7th Python\r\nin Science Conference (SciPy 2008), pp. 62-66.\r\n\r\nSpear, S.F., N. Balkenhol, M.-J. Fortin, B.H. McRae and K. Scribner. 2010. Use\r\nof resistance surfaces for landscape genetic studies: Considerations of\r\nparameterization and analysis. Molecular Ecology 19(17): 3576-3591.\r\n\r\nZeller K.A., McGarigal K., and Whiteley A.R. 2012.  Estimating landscape\r\nresistance to movement: a review. Landscape Ecology 27: 777-797.\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}